 <script>
     function priceUpdate(){
         let price_min, price_max, newURL;
         price_min = Math.abs($('#min_price_input').val());
         price_max = Math.abs($('#max_price_input').val());
         console.log(price_max, price_min)
         newURL = window.location.href;

        if(price_min)
            newURL = updateQueryString(newURL,'price_min', price_min);
        if(price_max)
            newURL = updateQueryString(newURL,'price_max', price_max);
        
        location.href = newURL;
     }
 </script>
 
 {{> header/top-header LoggedInUser = LoggedInUser}}
<section class="constant-height" style="height: 650px;">
	<div class="container-fluid">
		<div class="row">
            <div class="col-md-3" style="height: 650px;overflow-y: scroll;overflow-x: hidden;">
                <div class="row">			
                    <div class="col-md-10 geo_sort_bg">
                        <p>Showing <b> 1660 products</b></p>
                    </div>
                    <div class="col-md-2 geo_arrow_bg">
                        <a href="/geo-locate" style="color:#fff;"><i class="fas fa-caret-right"></i></a>
                    </div>
                </div>
                
                <div class="row">
                    <div class="col-md-12 col-12" style="background-color:#FFF">
                        <div class="ibox" style="margin-bottom: 0px;">
                            <div class="ibox-content ibox-content-geo-locate bg-transparent">
                                <p class="right-header-xs" style="font-size: 11px;"><b>FILTER BY CATEGORY</b></p>
                                <p class="right-header-xs bg1">ALL CATEGORIES</p>
                                <ul class="right-list-view category-fixed-geo-locate">
                                    {{#each categories}}
                                    <li>
                                        <a data-toggle="collapse" role="button" aria-expanded="true" class="collapsed coll" 
                                            href="#list{{this.name}}">{{this.name}} <!-- ({{this.categoryCount}}) --></a>
                                        <ul class="inner-list-view collapse" id="list{{this.name}}">
                                            {{#each ../allSubcategories}}
                                                {{#ifCond this.category_id '==' ../this.id}}
                                                <li>
                                                    <a href="../geo-locate/search?{{QueryParams ../../queryURI (FrameObject selected_category_id=../this.id selected_sub_category_id=this.id) ''}}">{{this.name}} <!-- ({{this.subCategoryCount}}) --></a>
                                                </li>
                                                {{/ifCond}}
                                            {{/each}}
                                        </ul>
                                    </li>
                                    {{/each}}
                                </ul>
                            </div>
                        </div>

                        <div class="ibox" style="margin-bottom: 0px;">
                            <div class="ibox-content ibox-content-geo-locate bg-transparent" style="border-width: 0px 0;">
                                <p class="right-header-xs" style="font-size: 11px;"><b>FILTER BY LOCATION</b></p>
                                <p class="right-header-xs bg1"> <a>GLOBAL</a></p>
                                <ul class="right-list-view category-fixed-geo-locate">
                                    {{#each country}}
                                    <li style="padding-left:15px;">
                                        <a href="../geo-locate/search?{{QueryParams ../queryURI (FrameObject selected_location_id=this.id) ''}}">{{this.name}} <!-- ({{this.categoryCount}}) --></a>
                                    </li>
                                    {{/each}}
                                </ul>
                            </div>
                        </div>

                        <div class="ibox" style="margin-bottom: 0px;">
                            <div class="ibox-content ibox-content-geo-locate bg-transparent" style="border-width: 0px 0;">
                                <p class="right-header-xs" style="font-size: 11px;">
                                    <b class="geo_search_filter">FILTER BY PRICE</b>
                                </p>
                                <p class="right-header-xs">
                                    <input type="number" placeholder="From" id="min_price_input" class="geo_search_from filter-price-input" /> 
                                    &nbsp;&nbsp;-&nbsp;&nbsp;
                                    <input type="number" placeholder="To" id="max_price_input" class="geo_search_to filter-price-input" />&nbsp;
                                    <button class="geo_search_update cursor-pointer filter-geo-locate-update" onclick="priceUpdate();"> <b>UPDATE</b></button>
                                </p>
                            </div>
                        </div>

                    </div>
                </div>
            </div>

			<div class="col-md-9 common_padding1">
				 <div id="map" style=""></div>
			</div> 
		</div>
	</div>
</section>
{{> footer/bottom-footer}}


 <script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDep_3sNz9G0wPjKYWvnQV-h-zuX427yI0&libraries=places"></script>

<script>

    function getCookie(c_name) {
        return localStorage.getItem(c_name);
    }

    function setCookie(c_name, value) {
        return localStorage.setItem(c_name, JSON.stringify(value));
    }


    var userLocation = {}, infowindow, map, marker, formattedLocation, bounds;
    var vendorGroupedObj = {{{DisplayJSON geoLocateByVendor}}}
    var mapObjVendor = Object.keys(vendorGroupedObj)


    var advSearchVendorObj = {{{DisplayJSON advancedSearchByVendor}}}
    var advMapObj = Object.keys(advSearchVendorObj);

    console.log(advSearchVendorObj)

     function initMap(geoUserLat, geoUserLng){
            formattedLocation = new google.maps.LatLng(geoUserLat, geoUserLng);

            map = new google.maps.Map(document.getElementById('map'), {
                zoom: 10,
                center: formattedLocation
            });

            bounds = new google.maps.LatLngBounds();

            for(let i=0; i< advMapObj.length; i++){
                let mapObjProduct = advSearchVendorObj[advMapObj[i]];
                 
                var content = `<p><img src="`+ mapObjProduct[0].Vendor.vendor_profile_pic_url +`" style="width: 50px; height: 50px;">
                <span style="font-size: 12px;">`+mapObjProduct[0].Vendor.vendor_name+`</span>
                <span class="text_blue_color" style="font-size: 8px;left: 49px;position: absolute;top: 35px;">Online Payments</span>
                </p>`;
                let more_content = "", title = mapObjProduct[0].Vendor.vendor_name;
                for(let j=0; j< mapObjProduct.length; j++){
                    if(j === 4){
                        break;
                    }
                    more_content = more_content + `<a href="javascript:;"><img src="`+ mapObjProduct[j].ProductMedia[0].url +`" style="width: 40px; height: 30px;"></a>`;
                }
                content = content + `<p>`+ more_content + `<a href="javascript:;">See All</a></p>`;
                createMarker(mapObjProduct[0].Vendor.latitude, mapObjProduct[0].Vendor.longitude, content, title); 

            }

/*
            for(let i=0; i< mapObjVendor.length; i++){
                let mapObjProduct = vendorGroupedObj[mapObjVendor[i]];
                var content = `<p><img src="`+ mapObjProduct[0].vendor_profile_pic_url +`" style="width: 50px; height: 50px;">
                <span style="font-size: 12px;">`+mapObjProduct[0].vendor_name+`</span>
                <span class="text_blue_color" style="font-size: 8px;left: 49px;position: absolute;top: 35px;">Online Payments</span>
                </p>`;
                let more_content = "";
                for(let j=0; j< mapObjProduct.length; j++){
                    if(j === 4){
                        break;
                    }
                    more_content = more_content + `<a href="javascript:;"><img src="`+ mapObjProduct[j].product_media_base_image +`" style="width: 40px; height: 30px;"></a>`;
                }
                content = content + `<p>`+ more_content + `<a href="javascript:;">See All</a></p>`;
                createMarker(mapObjProduct[0].latitude, mapObjProduct[0].longitude, content);
            }
*/

        map.fitBounds(bounds);

        }

        function createMarker(lat, lon, content, title){

            var markerLocation = new google.maps.LatLng(lat, lon);

            infowindow = new google.maps.InfoWindow({
                content: content,
                maxWidth: 200
            });

            /*
              icon: {
                    url: 'https://i.imgur.com/MjI0xAW.png'
                }
            */

            marker = new google.maps.Marker({
                position: markerLocation,
                map: map,
                title: title
                
            });


            bounds.extend(marker.position);

            google.maps.event.addListener(marker, 'mouseover', function () {
                infowindow.setContent(content);
                infowindow.open(map, this);
            });

            google.maps.event.addListener(map, "click", function(event) {
                infowindow.close();
            });

        }

         /* google.maps.event.addDomListener(window, 'load', function () {
            initMap(13.0723623, 80.20335009999997);
         }); */

    if (navigator.geolocation) {
            function geoLocationSuccess(position) {
                geoUserLng = position.coords.longitude;
                geoUserLat = position.coords.latitude;
    
                userLocation.location = {
                    geoUserLng: geoUserLng,
                    geoUserLat: geoUserLat
                };
                
                console.log("userLocation", userLocation)

                setCookie("userLocation", userLocation.location);
                
                initMap(geoUserLat, geoUserLng);
            }

            function geoLocationError(error) {
                // Default location
                userLocation.location = {
                    lng: -100.655093,
                    lat: 41.3884206
                };
                    
                console.log('Location access denied' + error.code);
                console.log("Default ", userLocation);
            }

            var geoOptions = {
              enableHighAccuracy: true,
              maximumAge: 0
            };


            let getCookieItem = JSON.parse(getCookie("userLocation"));
                console.log("getCookieItem", getCookieItem)
            if(getCookieItem){
                console.log("Reusing Location");
                initMap(getCookieItem.geoUserLat, getCookieItem.geoUserLng)
            }else{
                console.log("Fetching New location");
                navigator.geolocation.getCurrentPosition(geoLocationSuccess, geoLocationError, geoOptions);
            }

        } else {
            callback(userLocation);
            console.log("Cannot determine user location");
        }
    
    </script>

