<script type="text/javascript">
	$(function() {
		$("#inputFromDate").datepicker({
			trigger: $("#inputFromDateRange"),
			autoHide: true
		});
		$("#inputToDate").datepicker({
			trigger: $("#inputToDateRange"),
			autoHide: true
		});
	});

	$(document).ready(function() {
		var queryDate =[];
		if ($("#inputDateRange").val() == 1) {
			$("#inputFromDate").datepicker("setDate", new Date());
			$("#inputToDate").datepicker("setDate", new Date());
		} else if ($("#inputDateRange").val() == 2) {
			var startDate = new Date();
			var endDate = new Date();
			startDate.setDate(startDate.getDate() - 1);
			endDate.setDate(endDate.getDate() - 1);

			$("#inputFromDate").datepicker("setDate", startDate);
			$("#inputToDate").datepicker("setDate", startDate);
		} else if ($("#inputDateRange").val() == 3) {
			var startDate = new Date();
			var endDate = new Date();
			startDate.setDate(startDate.getDate() - 7);

			$("#inputFromDate").datepicker("setDate", startDate);
			$("#inputToDate").datepicker("setDate", endDate);
		} else if ($("#inputDateRange").val() == 4) {
			var startDate = new Date();
			var endDate = new Date();
			startDate.setDate(startDate.getDate() - 30);

			$("#inputFromDate").datepicker("setDate", startDate);
			$("#inputToDate").datepicker("setDate", endDate);
		} else if ($("#inputDateRange").val() == 5) {
			var startDate = new Date(new Date().getFullYear(), new Date().getMonth(), 1);
			var endDate = new Date(new Date().getFullYear(), new Date().getMonth() + 1, 0);

			$("#inputFromDate").datepicker("setDate", startDate);
			$("#inputToDate").datepicker("setDate", endDate);
		} else if ($("#inputDateRange").val() == 6) {
			var startDate = new Date(new Date().getFullYear(), new Date().getMonth() - 1, 1);
			var endDate = new Date(new Date().getFullYear(), new Date().getMonth() - 1 + 1, 0);

			$("#inputFromDate").datepicker("setDate", startDate);
			$("#inputToDate").datepicker("setDate", endDate);
		} else {
			if (!$("#inputFromDate").val()) {
				$("#inputFromDate").val(null);
			}
			if (!$("#inputToDate").val()) {
				$("#inputToDate").val(null);
			}
		}

		function fromToDate() {
			var from, to, date = [];
			queryDate.length = 0;
			from = $("#inputFromDate").val();
				to = $("#inputToDate").val();
				dates = [from,to];
				dates.forEach(function(key,element){
					let time = moment().format("HH:mm:ss");
					let dateAndTime = key + " "+ time;
					let timeFrame = moment(dateAndTime, "MM/DD/YYYY HH:mm:ss")._d
					queryDate[element] = timeFrame.toISOString();
				});
		}

		$('#inputDateRange').on('change', function() {
			
			if ($("#inputDateRange").val() == 1) {
				$("#inputFromDate").datepicker("setDate", new Date());
				$("#inputToDate").datepicker("setDate", new Date());
				fromToDate();
				window.location.href = "/store/accounting?range=" + $("#inputDateRange").val() + "&start_date=" + queryDate[0] + "&end_date=" + queryDate[1];
			} else if ($("#inputDateRange").val() == 2) {
				var startDate = new Date();
				var endDate = new Date();
				startDate.setDate(startDate.getDate() - 1);
				endDate.setDate(endDate.getDate() - 1);

				$("#inputFromDate").datepicker("setDate", startDate);
				$("#inputToDate").datepicker("setDate", startDate);
				fromToDate();
				window.location.href = "/store/accounting?range=" + $("#inputDateRange").val() + "&start_date=" + queryDate[0] + "&end_date=" + queryDate[1];
			} else if ($("#inputDateRange").val() == 3) {
				var startDate = new Date();
				var endDate = new Date();
				startDate.setDate(startDate.getDate() - 7);

				$("#inputFromDate").datepicker("setDate", startDate);
				$("#inputToDate").datepicker("setDate", endDate);
				fromToDate();
				window.location.href = "/store/accounting?range=" + $("#inputDateRange").val() + "&start_date=" + queryDate[0] + "&end_date=" + queryDate[1];
			} else if ($("#inputDateRange").val() == 4) {
				var startDate = new Date();
				var endDate = new Date();
				startDate.setDate(startDate.getDate() - 30);

				$("#inputFromDate").datepicker("setDate", startDate);
				$("#inputToDate").datepicker("setDate", endDate);
				fromToDate();
				window.location.href = "/store/accounting?range=" + $("#inputDateRange").val() + "&start_date=" + queryDate[0] + "&end_date=" + queryDate[1];
			} else if ($("#inputDateRange").val() == 5) {
				var startDate = new Date(new Date().getFullYear(), new Date().getMonth(), 1);
				var endDate = new Date(new Date().getFullYear(), new Date().getMonth() + 1, 0);

				$("#inputFromDate").datepicker("setDate", startDate);
				$("#inputToDate").datepicker("setDate", endDate);
				fromToDate();
				window.location.href = "/store/accounting?range=" + $("#inputDateRange").val() + "&start_date=" + queryDate[0] + "&end_date=" + queryDate[1];
			} else if ($("#inputDateRange").val() == 6) {
				var startDate = new Date(new Date().getFullYear(), new Date().getMonth() - 1, 1);
				var endDate = new Date(new Date().getFullYear(), new Date().getMonth() - 1 + 1, 0);

				$("#inputFromDate").datepicker("setDate", startDate);
				$("#inputToDate").datepicker("setDate", endDate);
				fromToDate();
				window.location.href = "/store/accounting?range=" + $("#inputDateRange").val() + "&start_date=" + queryDate[0] + "&end_date=" + queryDate[1];
			} else {
				window.location.href = "/store/accounting?range=" + $("#inputDateRange").val();
			}
		});

		$("#inputFromDate").change(function(e) {
			if (isDate($("#inputFromDate").val())) {
				if ($("#inputToDate").val()) {
					fromToDate();
					window.location.href = "/store/accounting?range=" + 7 + "&start_date=" + queryDate[0] + "&end_date=" + queryDate[1];
				}
			} else {
				window.location.href = "/store/accounting?range=" + $("#inputDateRange").val();
				alert("Invalid start date.");
			}
		});

		$("#inputToDate").change(function(e) {
			if (isDate($("#inputToDate").val())) {
				if ($("#inputFromDate").val()) {
					fromToDate();
					window.location.href = "/store/accounting?range=" + 7 + "&start_date=" + queryDate[0] + "&end_date=" + queryDate[1];
				}
			} else {
				window.location.href = "/store/accounting?range=" + $("#inputDateRange").val();
				alert("Invalid start date.");
			}
		});

		function isDate(txtDate) {
			var currVal = txtDate;
			if (currVal == '')
				return false;
			var rxDatePattern = /^(\d{1,2})(\/|-)(\d{1,2})(\/|-)(\d{4})$/;
			var dtArray = currVal.match(rxDatePattern);
			if (dtArray == null)
				return false;
			dtMonth = dtArray[1];
			dtDay = dtArray[3];
			dtYear = dtArray[5];
			if (dtMonth < 1 || dtMonth > 12)
				return false;
			else if (dtDay < 1 || dtDay > 31)
				return false;
			else if ((dtMonth == 4 || dtMonth == 6 || dtMonth == 9 || dtMonth == 11) && dtDay == 31)
				return false;
			else if (dtMonth == 2) {
				var isleap = (dtYear % 4 == 0 && (dtYear % 100 != 0 || dtYear % 400 == 0));
				if (dtDay > 29 || (dtDay == 29 && !isleap))
					return false;
			}
			return true;
		}
	});
</script>
{{> header/top-header LoggedInUser = LoggedInUser}} {{> vendor/vendor-menu}}
<div class="wrapper-content bg-gray">
	<div class="gtc-container">
		<div class="row">
			<div class="col-sm-2">
				{{> vendor/vendor-side-navbar}}
			</div>
			{{#if LoggedInUser.Vendor.VendorPlans}}
				<div class="col-sm-10">
					<div class="ibox">
						<div class="ibox-content">
							<div class="ibox-title">
								<h2>
									<span>Accounting</span>
									<span class="font-sm m-t-xs text-muted float-right">Current location: <span class="text-black text-500">{{LoggedInUser.Vendor.city}}, {{LoggedInUser.Vendor.State.name}}, {{LoggedInUser.Vendor.Country.name}}</span></span>
								</h2>
							</div>
							<div class="hr-line"></div>
							<div class="content-body m-t-sm">
								<form class="inline-form">
									<div class="form-group m-r-lg">
										<label class="label-control">Date Range : </label>
									</div>
									<div class="form-group m-r">
										<div class="input-group">
											<input id="inputFromDate" type="text" class="custom-form-control date_range_picker" value="{{queryParams.start_date}}" placeholder="MM/DD/YYYY" aria-label="inputFromDateRange" aria-describedby="inputFromDateRange">
											<div class="input-group-append cursor-pointer">
												<span class="input-group-text" id="inputFromDateRange">
													<img class="calendar-icon" src="../../img/calendar.png">
												</span>
											</div>
										</div>
									</div>
									<div class="form-group m-r">
										<label class="label-control">to</label>
									</div>
									<div class="form-group m-r">
										<div class="input-group">
											<input id="inputToDate" name="to_date" type="text" class="custom-form-control date_range_picker" value="{{queryParams.end_date}}" placeholder="MM/DD/YYYY" aria-label="inputToDateRange" aria-describedby="inputToDateRange">
											<div class="input-group-append cursor-pointer">
												<span class="input-group-text" id="inputToDateRange">
													<img class="calendar-icon" src="../../img/calendar.png">
												</span>
											</div>
										</div>
									</div>
									<div class="form-group m-r">
										<div class="select-container">
											<select id="inputDateRange" class="form-control-customized form-control-sm custom-dropdown" name="date_range">
												{{#each dateRangeOptions}}
													<option {{#ifCond @root.queryParams.range '==' this.value}} selected="true" {{/ifCond}} value="{{this.value}}">{{this.column}}</option>
												{{/each}}
											</select>
										</div>
									</div>
								</form>
							</div><br/>
							<div class="hr"></div>
							<div class="row">
								<div class="col-lg-7">
									<label>
										<h2>{{currency @root.accountingReport.total '$'}}</h2></label>
									<p class="text-sm">Total Ad Revenue, Processing Fees, Subscription Fees, Membership Fees</p>
								</div>
								<div class="col-lg-5">
									<label>
										<h2>{{currency @root.accountingReport.payment_in_escrow '$'}}</h2></label>
									<p class="text-sm">Payments in Escrow</p>
								</div>
							</div>
							<br/>
							<br/>
							<div class="row">
								<div class="col-lg-3">
									<label>
										<h3>{{currency @root.accountingReport.featured_product '$'}}</h3></label>
									<p class="text-sm">Ad & Featured Listings Revenue</p>
									<a class="text-sm" href="/store/revenue">View Full Report</a>
								</div>
								<div class="col-lg-2">
									<label>
										<h3>{{currency @root.accountingReport.processing_fees '$'}}</h3></label>
									<p class="text-sm">Processing Fees</p>
									<a class="text-sm" href="/store/processing">View Full Report</a>
								</div>
								<div class="col-lg-2">
									<label>
										<h3>{{currency @root.accountingReport.subscription_fees '$'}}</h3></label>
									<p class="text-sm">Subscription Fees</p>
									<a class="text-sm" href="/store/plan-fees">View Full Report</a>
								</div>
								<div class="col-lg-2">
									<label>
										<h3>{{currency @root.accountingReport.gtc_pay_escrow '$'}}</h3></label>
									<p class="text-sm">GTC pay Escrow Fees</p>
									<a class="text-sm" href="/store/gtcpay">View Full Report</a>
								</div>
								<div class="col-lg-2">
									<label>
										<h3>{{currency @root.accountingReport.membership '$'}}</h3></label>
									<p class="text-sm">Membership Fees</p>
									<a class="text-sm" href="/store/membership">View Full Report</a>
								</div>
							</div>
							<br/>
							<br/>
							<div>
								<label>
									<h4>Other</h4></label>
								<br/>
								<a class="text-sm" href="javascript:;">Tax Summary ( Collected based on Country, State/Province )</a>
							</div>
							
						</div>
					</div>
				</div>
				{{else}} 
					{{> plan-inactive}}
			{{/if}}
		</div>
	</div>
</div>
{{> footer/bottom-footer}}