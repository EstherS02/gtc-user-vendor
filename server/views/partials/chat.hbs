<section>
	<div class="container pull-right" id="chatbox">
		<div class="row chat-window col-xs-5 col-md-3 pull-right" id="chat_window_1">
			<div class="col-xs-12 col-md-12">
				<div class="panel panel-default">
					<div class="panel-heading top-bar">
						<div class="row" style="padding: 0px 10px;">
							<div class="col-md-8 col-xs-8">
								{{#if VendorDetail.TalkSettings}}
									<img {{#if VendorDetail.TalkSettings.[0].talk_profile_pic_url}} src="{{VendorDetail.TalkSettings.[0].talk_profile_pic_url}}"
									 {{else}} src="{{VendorDetail.vendor_profile_pic_url }}" {{/if}} width="30px" height="30px" onError="UserImgError(this)"
									 style="border-radius: 50%; border: 2px solid #a51a0b;">
								{{else}}
									<img src="img/avatar.png" width="30px" height="30px" onError="UserImgError(this)"
									 style="border-radius: 50%; border: 2px solid #a51a0b;">
								{{/if}}
								Chat Window </div>
							<div class="col-md-4 col-xs-4" style="text-align: right; float: right;">
								<a href="javascript:;" class="text-white">
									<span id="minim_chat_window" class="fas fa-window-minimize glyphicon glyphicon-minus icon_minim"></span>
								</a>
								<a href="javascript:;" class="text-white" style="display:none">
									<span class="fas fa-times glyphicon glyphicon-remove icon_close" data-id="chat_window_1"></span>
								</a>
							</div>
						</div>
					</div>
					<div id="messagebody" class="panel-body msg_container_base panel-background" style="min-width:100px">
						{{#if talkThreads.talk}}
							{{#each talkThreads.talk}}
								{{#ifCond this.from_id "==" ../LoggedInUser.id}}
									<div class="row msg_container base_sent">
										<div class="col-md-10 col-xs-10">
											<div class="messages send msg_sent">
												<p>{{this.message}}</p>
												<time datetime="">{{FormatDate this.created_on}}</time>
											</div>
										</div>
									</div>
							{{else ifCond this.from_id "!=" ../LoggedInUser.id}}
								<div class="row msg_container base_receive">

									<div class="col-md-10 col-xs-10">
										<div class="messages recieve msg_receive">
											<p>{{this.message}}</p>
											<time datetime="">{{FormatDate this.created_on}}</time>
										</div>
									</div>
								</div>

								{{/ifCond}}
							{{/each}}
						{{else}}
							{{#if VendorDetail.TalkSettings.[0].default_msg}}
								<div class="row msg_container base_receive" onload="default_msg();">

									<div class="col-md-10 col-xs-10">
										<div class="messages recieve msg_receive">
											<p>{{VendorDetail.TalkSettings.[0].default_msg}}</p>
										</div>
									</div>
								</div>
							{{/if}}
						{{/if}}
					</div>
					<div class="panel-footer panel-body" id="panelOpen">
						<div class="input-group text-background" id="sendbody">
							<input id="btn-input" type="text" class="form-control input-sm chat_input" placeholder="Write your message here..."
							 required="required" />
							<span class="input-group-btn background-btn" style="background-color: #4178bb">
								<button class="btn btn-info btn-sm btn-color" id="init-btn-video-call" style="background-color: #4178bb">
									<i class="fas fa-video" style="padding-right:5px;"></i>Call</button>
							</span>
							<span class="input-group-btn background-btn">
								<button class="btn btn-danger btn-sm btn-color" id="btn-chat">Send</button>
							</span>
						</div>
					</div>
				</div>
			</div>
</section>


<script>
	let loggedInUserDetails = {{{ DisplayJSON LoggedInUser }}};
	let VendorDetail = {{{ DisplayJSON VendorDetail.user_id }}};
	let talkThreadsId = {{{ DisplayJSON talkThreads.threadId }}};
	let vendorObject = {{{ DisplayJSON VendorDetail }}};
	$('#messagebody').hide();
	$("#panelOpen").hide();

	$(function() {
		function getUserName(user) {
			if (user.first_name && user.last_name) {
				return `${user.first_name} ${user.last_name}`;
			} else if (user.first_name) {
				return `${user.first_name}`;
			}
		}

		$('#init-btn-video-call').click(function() {
			let callBtn = document.querySelector('#init-btn-video-call');
			callBtn.disabled = true;
			let callObj = {
				callFrom: loggedInUserDetails.id,
				callTo: VendorDetail,
				callerName: getUserName(loggedInUserDetails),
				calleeName: getUserName(vendorObject.User),
				location: window.location.href
			};
			socket.emit('call:preinit', callObj);
		});

		socket.on('user:online', function (users) {
          if (vendorObject.user_id) {
            let index = users.indexOf(vendorObject.user_id);
            if((index > -1) && loggedInUserDetails.id) {
              $("#init-btn-video-call").show();
            } else {
              $("#init-btn-video-call").hide();
            }
          }
        });


		// console.log("TalkThreads", {{{ DisplayJSON talkThreads }}})
		if (loggedInUserDetails.id != null) {
			var socketChat = {
				"id": talkThreadsId,
				"user": loggedInUserDetails.id
			}
			//console.log("socketChat", socketChat);
			//var socket = io();
			//  console.log("socket", socket);
			socket.emit('chat:join', socketChat);
			// $("#messagebody").animate({
			// scrollTop: $("#messagebody")[0].scrollHeight
			// }, 1000);
			var element = document.querySelector('#messagebody');
			element.scrollTop = element.scrollHeight - element.clientHeight;
		}



		socket.on('chat:receive', function(data) {
			//  console.log("chat:receive emitted", data);

			// console.log("socketChat.user", socketChat.user);
			if (data.from_id == socketChat.user) {
				base = "base_sent";
				msg = "msg_sent";
				console.log("base_sent", base);
			} else {
				base = "base_receive";
				msg = "msg_receive"
				// console.log("basereceive", base);
			}
			var body = '<div class="row msg_container ' + base + '">' +
				'<div class="col-md-10 col-xs-10 ">' +
				'<div class="messages ' + msg + '">' +
				'<p>' + data.message + '</p>' +
				'<time datetime="">' + FormatDate(data.created_on) + '</time>' +
				'</div>' +
				'</div>' +
				'</div>';
			$(body).appendTo("#messagebody");
			// $('#btn-input').val('');
			$("#messagebody").animate({
				scrollTop: $("#messagebody")[0].scrollHeight
			}, 'slow');

			function FormatDate(testDate) {
				return moment(moment(moment.utc(testDate).toDate()).local().format('YYYY-MM-DD HH:mm:ss')).fromNow();
			}
		});

		socket.emit('user:get_online_users');
		// $("#messagebody").hide();
		// $("#sendbody").hide();
	})

	$(document).on('click', '.panel-heading span.icon_minim', function(e) {
		var $this = $(this);
		if (!$this.hasClass('panel-collapsed')) {
			$this.parents('.panel').find('.panel-body').slideUp(500);
			$this.addClass('panel-collapsed');
			$this.removeClass('glyphicon-minus').addClass('glyphicon-plus');
			$('#messagebody').show();
			$("#panelOpen").show();
		} else {
			$this.parents('.panel').find('.panel-body').slideDown(500);
			$this.removeClass('panel-collapsed');
			$this.removeClass('glyphicon-plus').addClass('glyphicon-minus');
			$('#messagebody').hide();
			$("#panelOpen").hide();
		}
	});
	$(document).on('focus', '.panel-footer input.chat_input', function(e) {
		var $this = $(this);
		if ($('#minim_chat_window').hasClass('panel-collapsed')) {
			$this.parents('.panel').find('.panel-body').slideDown();
			$('#minim_chat_window').removeClass('panel-collapsed');
			$('#minim_chat_window').removeClass('glyphicon-plus').addClass('glyphicon-minus');
		}
	});
	$(document).on('click', '#new_chat', function(e) {
		var size = $(".chat-window:last-child").css("margin-left");
		size_total = parseInt(size) + 400;
		alert(size_total);
		var clone = $("#chat_window_1").clone().appendTo(".container");
		clone.css("margin-left", size_total);
	});
	$(document).on('click', '.icon_close', function(e) {
		//$(this).parent().parent().parent().parent().remove();
		$("#chatbox").hide();
	});

	// send function start

	function send() {
		var userInfo = loggedInUserDetails;
		var chat = $("#btn-input").val();

		var dt = new Date();
		var time = dt.getHours() + ":" + dt.getMinutes() + ":" + dt.getSeconds();

		if (chat == "") {
			alert('Enter Message');
		} else {
			//var socket = io();
			var sendSocket = {
				'from_id': loggedInUserDetails.id,
				'talk_thread_id': talkThreadsId,
				'to_id': VendorDetail,
				'message': chat
			}
			//console.log("sendSocket",sendSocket);
			socket.emit('chat:send', sendSocket);
			$('#btn-input').val('');
		}
	}
	// send function end
	$("#btn-chat").click(function() {
		send()
	});

	$('#btn-input').keypress(function(e) {
		if (e.which == 13) {
			send()
		}
	});
</script>

<style>
	.btn-color {
		vertical-align: sub;
		color: #fff;
		background-color: #c60323;
		border: none;
	}

	.background-btn {
		background-color: #c60323;
		/*border-color: #dc3545;*/
	}

	.chat-window {
		bottom: 0;
		right: 0;
		position: fixed;
		float: right;
		z-index: 1;

	}

	.chat-window>div>.panel {
		border-radius: 5px 5px 0 0;
	}

	.icon_minim {
		padding: 4px 10px;
	}

	.msg_container_base {
		background: #fff;
		/*#e5e5e5;*/
		margin: 0;
		padding: 0 10px 10px;
		max-height: 300px;
		overflow-x: hidden;
	}

	.panel-background {
		-webkit-box-shadow: 0 0 10px grey;
		box-shadow: 0 0 10px grey;
	}

	.top-bar {
		border-radius: 30px 30px 0px 0px;
		background: #c60323;
		z-index: 1 !important;
		color: white;
		padding: 8px;
		position: relative;
		overflow: hidden;
	}

	.text-background {
		/*border-radius: 20px;*/
		border: solid 2px #c60323;
	}

	.msg_receive {
		padding-left: 0;
		margin-left: 0;
	}

	.msg_sent {
		/*padding-bottom: 20px !important;*/
		margin-right: 0;
	}

	.messages {
		color: black;
		background: white;
		padding: 10px;
		border-radius: 14px;
		max-width: 100%;
	}

	.recieve {
		box-shadow: inset 1px -1px 12px 0px rgb(216, 184, 190);
	}

	.send {
		box-shadow: inset 1px -1px 12px 0px rgb(119, 148, 142);
	}

	.messages>p {
		font-size: 13px;
		margin: 0 0 0.2rem 0;
	}

	.messages>time {
		font-size: 11px;
		color: #ccc;
	}

	.msg_container {
		padding: 10px;
		overflow: hidden;
		display: flex;
	}

	.chatimg {
		display: block;
		width: 100%;
	}

	.avatar {
		position: relative;
	}

	.base_receive>.avatar:after {
		content: "";
		position: absolute;
		top: 0;
		right: 0;
		width: 0;
		height: 0;
		border: 5px solid #FFF;
		border-left-color: rgba(0, 0, 0, 0);
		border-bottom-color: rgba(0, 0, 0, 0);
	}

	.base_sent {
		text-align: right;
		justify-content: flex-end;
		align-items: flex-end;
	}

	.base_sent>.avatar:after {
		content: "";
		position: absolute;
		bottom: 0;
		left: 0;
		width: 0;
		height: 0;
		border: 5px solid white;
		border-right-color: transparent;
		border-top-color: transparent;
		box-shadow: 1px 1px 2px rgba(black, 0.2); // not quite perfect but close
	}

	.msg_sent>time {
		float: right;
	}



	.msg_container_base::-webkit-scrollbar-track {
		-webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);
		background-color: #F5F5F5;
	}

	.msg_container_base::-webkit-scrollbar {
		width: 12px;
		background-color: #F5F5F5;
	}

	.msg_container_base::-webkit-scrollbar-thumb {
		-webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, .3);
		background-color: #555;
	}

	.btn-group.dropup {
		position: fixed;
		left: 0px;
		bottom: 0;
	}
	
	/*.panel-footer {
    padding: 10px 15px;
    background-color: #ccace0;
    border-top: 1px solid #ddd;
    border-bottom-right-radius: 3px;
    border-bottom-left-radius: 3px;


  }*/
</style>