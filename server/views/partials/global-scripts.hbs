<script>
    function updateQueryString(uri, key, value) {
        var re = new RegExp("([?&])" + key + "=.*?(&|$)", "i");
        var separator = uri.indexOf('?') !== -1 ? "&" : "?";
        if (uri.match(re)) {
            return uri.replace(re, '$1' + key + "=" + value + '$2');
        }
        else {
            return uri + separator + key + "=" + value;
        }
    }


    function getUrlQueryString() {
        var vars = [], hash;
        var hashes = window.location.href.slice(window.location.href.indexOf('?') + 1).split('&');
        for (var i = 0; i < hashes.length; i++) {
            hash = hashes[i].split('=');
            vars.push(hash[0]);
            vars[hash[0]] = hash[1];
        }
        return vars;
    }

    $(function () {
        socket.on('connect', () => {
            socket.on('call:preinit', (callObj) => {
                if(callObj && callObj.callUniqueId){
                    let loadUrl = `/web-rtc/${callObj.callUniqueId}`;
                    loadUrl = updateQueryString(loadUrl, "callInitiator", true);
                    localStorage.setItem('callerParams', JSON.stringify(callObj));
                    window.location.href = loadUrl;
                }
            });

            socket.on('call:init', (callObj) => {
                return socket.emit('call:join', callObj);
            });

            socket.on('call:incoming', (callObj) => {
                let callAcceptStatus = confirm(`Incoming Video call from ${callObj.callFrom}`);
                if(callAcceptStatus){
                    callObj['callAcceptStatus'] = true;
                    let loadUrl = `/web-rtc/${callObj.callUniqueId}`;
                    loadUrl = updateQueryString(loadUrl, "callInitiator", false);
                    localStorage.setItem('calleeParams', JSON.stringify(callObj));
                    return window.location.href = loadUrl;
                }
                callObj['callAcceptStatus'] = false;
                return socket.emit('call:rejected', callObj);
            });

            socket.on('call:rejected', (callObj) => {
                if(!callObj.callAcceptStatus){
                    alert(`Your call was rejected by ${callObj.callFrom}`)
                }
            });
            
        });

    })


</script>